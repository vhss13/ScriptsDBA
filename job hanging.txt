SELECT DATEDIFF(SECOND,aj.start_execution_date,GetDate()) AS Seconds
FROM msdb..sysjobactivity aj
JOIN msdb..sysjobs sj on sj.job_id = aj.job_id
WHERE aj.stop_execution_date IS NULL -- job hasn't stopped running
AND aj.start_execution_date IS NOT NULL -- job is currently running
AND sj.name = 'JobX'
and not exists( -- make sure this is the most recent run
    select 1
    from msdb..sysjobactivity new
    where new.job_id = aj.job_id
    and new.start_execution_date > aj.start_execution_date
)





/**** FOR CURRENTLY RUNNING JOBS ****/
SELECT j.name AS Job_Name,DATEDIFF(ss,a.start_execution_date ,GETDATE ())   
FROM msdb.dbo.sysjobactivity a INNER JOIN msdb.dbo.sysjobs j 
ON a.job_id =j.job_id
WHERE CONVERT(DATE,a.start_execution_date )=CONVERT(DATE,GETDATE ())
AND a.stop_execution_date IS NULL





use msdb
go
create procedure StopLong_movtrf
    @MaxAllowedRunningMinutes int = 10
as
begin
-- ============================================================================
-- Stops current long running SQL Server Agent Jobs
--
-- Name: dbo.sp_StopLongRunningSqlJobs
-- Type: Stored Procedure
-- Scope: System Level
-- Author: Jon LaBelle
-- Created: 08-27-2015
--
-- Parameters:
--
-- - @MaxAllowedRunningMinutes int - The maximum allowed time in minutes
--                                   a job is allowed to run. Any job currently
--                                   running over the specified amount, will be
--                                   stopped. The default value is "20" minutes.
-- ============================================================================
 
    set nocount on;
 
    if @MaxAllowedRunningMinutes is null
    begin
        set @MaxAllowedRunningMinutes = 10;
    end;
 
    declare @JobName nvarchar(256);
    declare @MinutesRunning int;
    declare @runningJobs table(
        JobName nvarchar(256) NULL,
        MinutesRunning int NULL
    );
 
    --
    -- Populate @runningJobs table
    insert into @runningJobs
        select sj.name as JobName,
            DATEDIFF(minute, sja.start_execution_date, GETDATE()) as MinutesRunning
        from msdb.dbo.sysjobactivity as sja
        inner join msdb.dbo.sysjobs as sj
            on sja.job_id = sj.job_id
        where CONVERT(date, sja.start_execution_date) = CONVERT(date, GETDATE())
            and sja.stop_execution_date is null
			and sj.job_id='4A58A1D1-BB54-4746-9CD7-F9A5EF8C7D54'; -- para o job especifico
 
    --
    -- Stop a long running job.
    -- TODO: use a cursor to iterate over more than 1 long running job.
    if exists (select MinutesRunning from @runningJobs where MinutesRunning > @MaxAllowedRunningMinutes)
    begin
        select top 1 @JobName = JobName from @runningJobs where MinutesRunning > @MaxAllowedRunningMinutes;
        print N'Stopping long running (over '+ convert(nvarchar(10), @MaxAllowedRunningMinutes) +'-minutes) SQL Agent Job "' + @JobName + '".';
        exec msdb.dbo.sp_stop_job @job_name = @JobName;
    end;
 
end;